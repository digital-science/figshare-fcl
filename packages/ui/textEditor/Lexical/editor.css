.container {
  --border-color: var(--color-border-primary);
  --border-width: calc(var(--gridSize) / 6);

  position: relative;

  display: flex;
  overflow: hidden;
  flex-direction: column;
  justify-content: space-between;

  width: 100%;
  height: calc(45.5 * var(--gridSize));
  min-height: calc(45.5 * var(--gridSize));
  max-height: calc(100 * var(--gridSize));

  padding: var(--gridSize) calc(2 * var(--gridSize)) 0;

  resize: vertical;

  border: calc(var(--gridSize) / 6) solid var(--border-color);
  border-radius: var(--gridSize);
  background-color: var(--color-layout-primary-background);
  box-shadow: inset 0 1px 4px rgba(135, 134, 134, 0.2);
}

.container:focus-within {
  --border-color: var(--color-border-active);
}

.container:focus-within::before {
  position: absolute;
  z-index: 1;
  top: -1px;
  right: -1px;
  bottom: -1px;
  left: -1px;

  content: " ";
  pointer-events: none;

  border: calc(2 * var(--border-width)) solid var(--border-color);
  border-radius: inherit;
}

.container.error {
  --border-color: var(--color-border-error);
}

.container.singleRow {
  overflow-y: scroll;

  height: calc(14 * var(--gridSize));
  min-height: calc(14 * var(--gridSize));
}

.input {
  overflow: auto;

  height: 100%;

  border-top-left-radius: inherit;
  border-top-right-radius: inherit;
}

.input u {
  text-decoration: underline;
}

.input del {
  text-decoration: line-through;
}

.input u > del,
.input del > u {
  text-decoration: underline line-through;
}

.input ol {
  margin: 0;
  margin-left: 16px;
  padding: 0;
}

.input ul {
  margin: 0;
  margin-left: 16px;
  padding: 0;
}

.input a {
  cursor: pointer;
}

.input:focus {
  box-shadow: none;
}

.placeholder {
  font-size: var(--typography-M-fontSize);
  line-height: inherit;

  position: absolute;

  padding-right: inherit;

  pointer-events: none;

  color: var(--color-typography-tertiary);
}

.editor-listitem {
  margin: calc(1.5 * var(--gridSize)) calc(4 * var(--gridSize)) calc(1.5 * var(--gridSize)) calc(4 * var(--gridSize));
}

/** Extend `typography.css` `not([class])` styling inside editor input **/
.input h1 {
  font-size: var(--typography-XXL-fontSize);
  line-height: var(--typography-XXL-lineHeight);

  margin: 0 0 calc(7 * var(--gridSize)) 0;
}

.input h2 {
  font-size: var(--typography-XL-fontSize);
  line-height: var(--typography-XL-lineHeight);

  margin: calc(7 * var(--gridSize)) 0 calc(2 * var(--gridSize)) 0;
}

.input h3 {
  font-size: var(--typography-L-fontSize);
  line-height: var(--typography-L-lineHeight);

  margin: calc(5 * var(--gridSize)) 0 calc(2 * var(--gridSize)) 0;
}

.input h4 {
  font-size: var(--typography-M-fontSize);
  line-height: var(--typography-M-lineHeight);

  margin: calc(4 * var(--gridSize)) 0 calc(2 * var(--gridSize)) 0;
}

.input h5 {
  font-size: var(--typography-S-fontSize);
  line-height: var(--typography-S-lineHeight);

  margin: calc(4 * var(--gridSize)) 0 calc(2 * var(--gridSize)) 0;
}

.input h6 {
  font-size: var(--typography-S-fontSize);
  line-height: var(--typography-S-lineHeight);

  margin: calc(4 * var(--gridSize)) 0 calc(2 * var(--gridSize)) 0;
}

.input h2 + h3,
.input h2 + h4,
.input h2 + h5,
.input h2 + h6,
.input h3 + h4,
.input h3 + h5,
.input h3 + h6,
.input h4 + h5,
.input h4 + h6,
.input h5 + h6 {
  margin-top: calc(2 * var(--gridSize));
}

.input p {
  font-size: var(--typography-M-fontSize);
  line-height: var(--typography-M-lineHeight);

  margin: 0 0 calc(4 * var(--gridSize)) 0;
}

.container.singleRow p {
  margin: 0;
}

.input ul,
.input ol {
  font-size: var(--typography-M-fontSize);
  line-height: var(--typography-M-lineHeight);

  margin: 0 0 calc(4 * var(--gridSize)) 0;
  padding: 0 0 0 calc(4 * var(--gridSize));
}

.input p + ul,
.input p + ol {
  margin-top: calc(-3 * var(--gridSize));
}

.input ul ul,
.input ol ol,
.input ol ul,
.input ul ol {
  margin: 0;
}

.input ol ol,
.input ul ol {
  list-style-type: lower-roman;
}

.input ol ol ol,
.input ol ul ol,
.input ul ol ol,
.input ul ul ol {
  list-style-type: lower-alpha;
}

.input li:has(ol),
.input li:has(ul) {
  list-style: none;
}

.input li[data-indent] {
  list-style: none;
}

.input a:hover,
.input a:focus {
  text-decoration: none;
}

:global(.ltr) {
  text-align: left;
}

:global(.rtl) {
  text-align: right;
}

.input a:hover > *:not(:global(.editor-strikethrough), :global(.editor-underlineStrikethrough)),
.input a:focus > *:not(:global(.editor-strikethrough), :global(.editor-underlineStrikethrough)) {
  text-decoration: underline;
}

.input a:hover > :global(.editor-strikethrough),
.input a:focus > :global(.editor-strikethrough) {
  text-decoration: underline line-through;
}
